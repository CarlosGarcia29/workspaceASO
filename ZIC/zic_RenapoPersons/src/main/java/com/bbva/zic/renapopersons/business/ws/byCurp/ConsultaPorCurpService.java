package com.bbva.zic.renapopersons.business.ws.byCurp;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import org.springframework.stereotype.Component;

import scala.reflect.internal.Trees.This;

import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.10
 * 2015-09-02T14:33:53.410-05:00
 * Generated source version: 2.6.10
 * 
 */
@Component
@WebServiceClient(name = "ConsultaPorCurpService", 
                  wsdlLocation = "ConsultaPorCurpService.wsdl",
                  targetNamespace = "http://services.wserv.ecurp.dgti.segob.gob.mx") 
public class ConsultaPorCurpService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://services.wserv.ecurp.dgti.segob.gob.mx", "ConsultaPorCurpService");
    public final static QName ConsultaPorCurpServiceHttpSoap11Endpoint = new QName("http://services.wserv.ecurp.dgti.segob.gob.mx", "ConsultaPorCurpServiceHttpSoap11Endpoint");
    public final static QName ConsultaPorCurpServiceHttpsSoap12Endpoint = new QName("http://services.wserv.ecurp.dgti.segob.gob.mx", "ConsultaPorCurpServiceHttpsSoap12Endpoint");
    public final static QName ConsultaPorCurpServiceHttpEndpoint = new QName("http://services.wserv.ecurp.dgti.segob.gob.mx", "ConsultaPorCurpServiceHttpEndpoint");
    public final static QName ConsultaPorCurpServiceHttpSoap12Endpoint = new QName("http://services.wserv.ecurp.dgti.segob.gob.mx", "ConsultaPorCurpServiceHttpSoap12Endpoint");
    public final static QName ConsultaPorCurpServiceHttpsEndpoint = new QName("http://services.wserv.ecurp.dgti.segob.gob.mx", "ConsultaPorCurpServiceHttpsEndpoint");
    public final static QName ConsultaPorCurpServiceHttpsSoap11Endpoint = new QName("http://services.wserv.ecurp.dgti.segob.gob.mx", "ConsultaPorCurpServiceHttpsSoap11Endpoint");
    static {
        URL url = ConsultaPorCurpService.class.getResource("ConsultaPorCurpService.wsdl");
        if (url == null) {
            url = ConsultaPorCurpService.class.getClassLoader().getResource("ConsultaPorCurpService.wsdl");
        } 
        if (url == null) {
        	url = System.class.getResource("ConsultaPorCurpService.wsdl");
        }
        if (url == null) {
            url = Temporal.class.getClassLoader().getResource("ConsultaPorCurpService.wsdl");
        }
        if (url == null) {
        	url = ClassLoader.getSystemClassLoader().getResource("ConsultaPorCurpService.wsdl");
        }
        
        if (url == null) {
            java.util.logging.Logger.getLogger(ConsultaPorCurpService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "ConsultaPorCurpService.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public ConsultaPorCurpService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ConsultaPorCurpService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ConsultaPorCurpService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
//    This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
//    API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
//    compliant code instead.
//    public ConsultaPorCurpService(WebServiceFeature ... features) {
//        super(WSDL_LOCATION, SERVICE, features);
//    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
//    public ConsultaPorCurpService(URL wsdlLocation, WebServiceFeature ... features) {
//        super(wsdlLocation, SERVICE, features);
//    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
//    public ConsultaPorCurpService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
//        super(wsdlLocation, serviceName, features);
//    }

    /**
     *
     * @return
     *     returns ConsultaPorCurpServicePortType
     */
    @WebEndpoint(name = "ConsultaPorCurpServiceHttpSoap11Endpoint")
    public ConsultaPorCurpServicePortType getConsultaPorCurpServiceHttpSoap11Endpoint() {
        return super.getPort(ConsultaPorCurpServiceHttpSoap11Endpoint, ConsultaPorCurpServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ConsultaPorCurpServicePortType
     */
    @WebEndpoint(name = "ConsultaPorCurpServiceHttpSoap11Endpoint")
    public ConsultaPorCurpServicePortType getConsultaPorCurpServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(ConsultaPorCurpServiceHttpSoap11Endpoint, ConsultaPorCurpServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns ConsultaPorCurpServicePortType
     */
    @WebEndpoint(name = "ConsultaPorCurpServiceHttpsSoap12Endpoint")
    public ConsultaPorCurpServicePortType getConsultaPorCurpServiceHttpsSoap12Endpoint() {
        return super.getPort(ConsultaPorCurpServiceHttpsSoap12Endpoint, ConsultaPorCurpServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ConsultaPorCurpServicePortType
     */
    @WebEndpoint(name = "ConsultaPorCurpServiceHttpsSoap12Endpoint")
    public ConsultaPorCurpServicePortType getConsultaPorCurpServiceHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(ConsultaPorCurpServiceHttpsSoap12Endpoint, ConsultaPorCurpServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns ConsultaPorCurpServicePortType
     */
    @WebEndpoint(name = "ConsultaPorCurpServiceHttpEndpoint")
    public ConsultaPorCurpServicePortType getConsultaPorCurpServiceHttpEndpoint() {
        return super.getPort(ConsultaPorCurpServiceHttpEndpoint, ConsultaPorCurpServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ConsultaPorCurpServicePortType
     */
    @WebEndpoint(name = "ConsultaPorCurpServiceHttpEndpoint")
    public ConsultaPorCurpServicePortType getConsultaPorCurpServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(ConsultaPorCurpServiceHttpEndpoint, ConsultaPorCurpServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns ConsultaPorCurpServicePortType
     */
    @WebEndpoint(name = "ConsultaPorCurpServiceHttpSoap12Endpoint")
    public ConsultaPorCurpServicePortType getConsultaPorCurpServiceHttpSoap12Endpoint() {
        return super.getPort(ConsultaPorCurpServiceHttpSoap12Endpoint, ConsultaPorCurpServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ConsultaPorCurpServicePortType
     */
    @WebEndpoint(name = "ConsultaPorCurpServiceHttpSoap12Endpoint")
    public ConsultaPorCurpServicePortType getConsultaPorCurpServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(ConsultaPorCurpServiceHttpSoap12Endpoint, ConsultaPorCurpServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns ConsultaPorCurpServicePortType
     */
    @WebEndpoint(name = "ConsultaPorCurpServiceHttpsEndpoint")
    public ConsultaPorCurpServicePortType getConsultaPorCurpServiceHttpsEndpoint() {
        return super.getPort(ConsultaPorCurpServiceHttpsEndpoint, ConsultaPorCurpServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ConsultaPorCurpServicePortType
     */
    @WebEndpoint(name = "ConsultaPorCurpServiceHttpsEndpoint")
    public ConsultaPorCurpServicePortType getConsultaPorCurpServiceHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(ConsultaPorCurpServiceHttpsEndpoint, ConsultaPorCurpServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns ConsultaPorCurpServicePortType
     */
    @WebEndpoint(name = "ConsultaPorCurpServiceHttpsSoap11Endpoint")
    public ConsultaPorCurpServicePortType getConsultaPorCurpServiceHttpsSoap11Endpoint() {
        return super.getPort(ConsultaPorCurpServiceHttpsSoap11Endpoint, ConsultaPorCurpServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ConsultaPorCurpServicePortType
     */
    @WebEndpoint(name = "ConsultaPorCurpServiceHttpsSoap11Endpoint")
    public ConsultaPorCurpServicePortType getConsultaPorCurpServiceHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(ConsultaPorCurpServiceHttpsSoap11Endpoint, ConsultaPorCurpServicePortType.class, features);
    }

}
